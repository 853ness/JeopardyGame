#BlueJ class context
comment0.target=Question
comment0.text=\n\ A\ question\ the\ user\ is\ asked.\n\n\ @author\ Michael\ Berry\ (mjrb4)\n\ @author\ Ed\ Parrish\n\ @version\ 1.1\ \ 12/01/10\n
comment1.params=question\ questionValue
comment1.target=Question(java.lang.String,\ int)
comment1.text=\n\ Create\ a\ new\ question.\n\n\ @param\ question\ The\ question\ text.\n\ @param\ questionValue\ The\ value\ of\ the\ question.\n
comment10.params=
comment10.target=boolean\ hasExplanation()
comment10.text=\n\ Determine\ whether\ this\ question\ has\ an\ explanation.\n\n\ @return\ <code>true</code>\ if\ the\ explanation\ has\ an\ answer;\n\ \ \ \ \ \ \ \ \ otherwise\ <code>false</code>.\n
comment11.params=
comment11.target=java.lang.String\ getFirstCorrectAnswerText()
comment11.text=\n\ Returns\ the\ first\ correct\ Answer\ on\ the\ list.\n\n\ Multiple\ correct\ answers\ are\ allowed.\n\n\ @return\ The\ first\ correct\ answer\ on\ the\ list.\n
comment12.params=newValue
comment12.target=void\ setValue(int)
comment12.text=\n\ Sets\ the\ "value"\ for\ this\ question.\n\n\ @param\ newValue\ The\ new\ value\ for\ this\ question.\n
comment13.params=
comment13.target=int\ getValue()
comment13.text=\n\ Returns\ the\ current\ value\ for\ this\ question.\n\n\ @return\ The\ current\ value\ for\ this\ question.\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ Returns\ a\ string\ representation\ of\ the\ object\ for\ debugging\ purposes.\n\n\ @return\ The\ string\ representation\ of\ the\ object.\n
comment15.params=
comment15.target=void\ clear()
comment15.text=\n\ Clears\ the\ display\ area\ and\ removes\ this\ object\ from\ the\ world.\n
comment16.params=w
comment16.target=void\ addedToWorld(greenfoot.World)
comment16.text=\n\ Save\ the\ world\ and\ draw\ it.\n\n\ @param\ w\ the\ world.\n
comment17.params=
comment17.target=void\ draw()
comment17.text=\n\ Draw\ the\ question\ screen.\n
comment2.params=original
comment2.target=Question(Question)
comment2.text=\n\ \ Create\ a\ copy\ of\ a\ Question\ from\ another\ Question.\n\n\ @param\ original\ The\ Question\ to\ copy\ from.\n
comment3.params=
comment3.target=void\ act()
comment3.text=\n\ Check\ for\ the\ end\ of\ the\ question\ on\ self-assessed\ questions.\n
comment4.params=answerText\ correct
comment4.target=void\ addAnswer(java.lang.String,\ boolean)
comment4.text=\n\ Adds\ an\ anser\ for\ this\ question.\n\n\ @param\ answerText\ The\ answer\ text.\n\ @param\ correct\ Set\ <code>true</code>\ if\ the\ answer\ is\ correct;\n\ \ \ \ \ \ \ \ otherwise\ <code>false</code>.\n
comment5.params=
comment5.target=void\ shuffleAnswers()
comment5.text=\n\ Randomly\ permutes\ the\ list\ of\ answers.\n
comment6.params=answer
comment6.target=int\ getIndex(Answer)
comment6.text=\n\ Returns\ the\ index\ of\ the\ first\ occurrence\ of\ the\ specified\ answer,\n\ or\ -1\ if\ the\ answer\ does\ not\ exist.\n\n\ @param\ answer\ The\ Answer\ to\ find\ the\ index\ of.\n\n\ @return\ The\ index\ of\ the\ answer\ in\ the\ list\ of\ answers,\ or\ -1\ if\ the\n\ answer\ does\ not\ exist.\n
comment7.params=b
comment7.target=void\ setDisplayAnswers(boolean)
comment7.text=\n\ Enables\ or\ disables\ the\ display\ of\ the\ multiple\ choice\ answer\ list.\n\n\ @param\ b\ Set\ <code>true</code>\ to\ enable\ the\ display,\ otherwise\ set\ to\n\ \ \ \ \ \ \ \ <code>false</code>.\n
comment8.params=explanatoryText
comment8.target=void\ setExplanation(java.lang.String)
comment8.text=\n\ Set\ the\ optional\ explanation\ for\ this\ question.\n\n\ @param\ explanatoryText\ The\ explanation\ for\ this\ question.\n
comment9.params=
comment9.target=java.lang.String\ getExplanation()
comment9.text=\n\ Get\ the\ explanation\ for\ this\ question.\n\n\ @return\ The\ explanation\ for\ the\ question.\n
numComments=18
