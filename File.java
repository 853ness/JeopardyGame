/**
 * Questions as String[] instead of files since cannot read files online.
 */
public class File {
    public static final String[] BASICS = {
            "# Single Round",
            "# Category format = :CATX:Category name, where X is the catgory number.",
            "# Question format = :QUESTX:$:Question test, where X is the question number",
            "#     and $ is the value displayed for the question.",
        "# Questions are linked to categories in groups of 5. For example, questions 1",
            "#     to 5 are in category 1, questions 6 to 10 in category 2, and so on.",
            "# Answer format = :ANSWERX:T/F:Answer text, where X is the question number and",
            "#     T/F is either T (for true) or F (for false). Answers are optional.",
            "# Answer order format = :ANSWERORDER1:randomized to shuffle the answers. Skip",
            "#     this statement if you do not wnat to randomize answers.",
            "# Explanation format = :EXPLANATIONX:Explanation text, where X is the question",
            "#     number. Note that you can force new lines using \n.",
            "",
            ":CAT1:GREENFOOT:\nTHE CLASS",
            "",
            ":QUEST1:100:When you want to work with an image, use this class.",
            ":ANSWER1:T:GreenfootImage",
            ":ANSWER1:F:Actor",
            ":ANSWER1:F:Greenfoot",
            ":ANSWER1:F:World",
            ":ANSWERORDER1:randomized",
            ":EXPLANATION1:When you look at the Greenfoot documentation, you see that GreenfootImage is an image for an Actor or World to display.",
            "",
            ":QUEST2:200:All of this is the stage on which your objects act.",
            ":ANSWER2:T:World",
            ":ANSWER2:F:Actor",
            ":ANSWER2:F:Greenfoot",
            ":ANSWER2:F:Stage",
            ":ANSWERORDER2:randomized",
            ":EXPLANATION2:When you look at the Greenfoot documentation, you see that World is the world in which Actors live.",
            "",
            ":QUEST3:300:You can play your music with this class.",
            ":ANSWER3:T:Greenfoot",
            ":ANSWER3:F:Actor",
            ":ANSWER3:F:SoundPlayer",
            ":ANSWER3:F:World",
            ":ANSWERORDER3:randomized",
            ":EXPLANATION3:When you look at the Greenfoot documentation, you see that Greenfoot is a utility class. One of its methods is playSound(), which plays a sound from a file.",
            "",
            ":QUEST4:400:Almost every program you write includes subclasses of these two classes.",
            ":ANSWER4:T:Actor and World",
            ":ANSWER4:F:Actor and Greenfoot",
            ":ANSWER4:F:GreenfootImage and GreenfootSound",
            ":ANSWER4:F:World and Greenfoot",
            ":ANSWERORDER4:randomized",
            ":EXPLANATION4:Every scenario in Greenfoot subclasses World and Actor.",
            "",
            ":QUEST5:500:Objects of this class live within objects of another class and usually contains objects of still other classes.",
            ":ANSWER5:T:Actor",
            ":ANSWER5:F:Greenfoot",
            ":ANSWER5:F:String",
            ":ANSWER5:F:World",
            ":ANSWERORDER5:randomized",
            ":EXPLANATION5:An Actor lives within a World subclass and often contains other objects such as GreenfootImage or String.",
            "",
            ":CAT2:RAW DATA",
            "",
            ":QUEST6:100:When you want to store whole numbers in a computer's main memory, use this data type.",
            ":ANSWER6:T:int",
            ":ANSWER6:F:String",
            ":ANSWER6:F:double",
            ":ANSWER6:F:char",
            ":ANSWERORDER6:randomized",
            ":EXPLANATION6:The data type of a variable defines the kind of data to store in a computer's main memory. The int data type stores integers, which are numbers without a decimal point.",
            "",
            ":QUEST7:200:When you want to store sequences of characters, like \"Hello World\", use this data type.",
            ":ANSWER7:T:String",
            ":ANSWER7:F:string",
            ":ANSWER7:F:str",
            ":ANSWER7:F:text",
            ":ANSWERORDER7:randomized",
            ":EXPLANATION7:Sequences of characters are known as strings. The string data type in Java is: String.",
            "",
            ":QUEST8:300:Of 3, 4 or 5, these are all this data type.",
            ":ANSWER8:T:int",
            ":ANSWER8:F:String",
            ":ANSWER8:F:double",
            ":ANSWER8:F:char",
            ":ANSWERORDER8:randomized",
            ":EXPLANATION8:The numbers 3, 4 and 5 are all integer numbers. An integer is zero or any positive or negative number without a decimal point. The data type for integers is int.",
            "",
            ":QUEST9:400:The literal \"9\" (with quote marks) is of this data type.",
            ":ANSWER9:T:String",
            ":ANSWER9:F:int",
            ":ANSWER9:F:double",
            ":ANSWER9:F:char",
            ":ANSWERORDER9:randomized",
            ":EXPLANATION9:Sequences of characters inside double quotes are strings. Even though the characters look like numbers the quote marks around the numbers make them a string. Even though the string contains numbers, the double quote marks make this a string. In Java, the data type for a string is: String.",
            "",
            ":QUEST10:500:You cannot store the digits of Pi, which is approximately 3.14159, with this numerical data type.",
            ":ANSWER10:T:int",
            ":ANSWER10:F:String",
            ":ANSWER10:F:double",
            ":ANSWER10:F:float",
            ":ANSWERORDER10:randomized",
            ":EXPLANATION10:Pi is approximately 3.14159, which is a number with a decimal point. The int data type cannot store numbers with decimal points. Strings can store the digits making up Pi, even though your program cannot perform arithmetic on the number. Both double and float can store Pi as a number though double has more accuracy that float. Thus the best question is: What is int?",
            "",
            ":CAT3:LOCATION,\nLOCATION",
            "",
            ":QUEST11:100:These 2 coordinates are used to locate a point in a 2-dimensional Cartesian, or coordinate, system.",
            ":ANSWER11:T:x & y",
            ":ANSWER11:F:up & down",
            ":ANSWER11:F:latitude & longitude",
            ":ANSWER11:F:radius & theta (\u0398)",
            ":ANSWERORDER11:randomized",
            ":EXPLANATION11:A Cartesian coordinate system specifies each point in a plane using the numerical coordinates x & y.",
            "",
            ":QUEST12:200:The  origin (0, 0) of the coordinate system is located at this area of a Greenfoot window.",
            ":ANSWER12:T:the upper left-hand corner",
            ":ANSWER12:F:in the center",
            ":ANSWER12:F:the upper right-hand corner",
            ":ANSWER12:F:the lower left-hand corner",
            ":ANSWERORDER12:randomized",
            ":EXPLANATION12:The upper left-hand corner is the origin (0, 0) of the Greenfoot coordinate system.",
            "",
            ":QUEST13:300:To move to a specific (x, y) location, use this method of the Actor class.",
            ":ANSWER13:T:setLocation()",
            ":ANSWER13:F:location()",
            ":ANSWER13:F:setXY()",
            ":ANSWER13:F:setX_Y()",
            ":ANSWERORDER13:randomized",
            ":EXPLANATION13:The setLocation() method of the Actor class assigns a new location for an Actor object. The location is specified as a cell index in the world.",
            "",
            ":QUEST14:400:To find the current (x, y) coordinate location of an Actor, use these two methods.",
            ":ANSWER14:T:getX() and getY()",
            ":ANSWER14:F:x() and y()",
            ":ANSWER14:F:getXCoordinate() and getYCoordinate()",
            ":ANSWER14:F:setX() and setY()",
            ":ANSWERORDER14:randomized",
            ":EXPLANATION14:Method getX() returns the x-coordinate of the object's current location and method getY() returns the y-coordinate of the object's current location.",
            "",
            ":QUEST15:500:To move an Actor one pixel to the right use this statement.",
            ":ANSWER15:T:setLocation(getX() + 1, getY());",
            ":ANSWER15:F:setLocation(getX() + 10, getY() - 1);",
            ":ANSWER15:F:setLocation(getX() + 1, getY() - 1);",
            ":ANSWER15:F:setLocation(getX(), getY() + 1);",
            ":ANSWERORDER15:randomized",
            ":EXPLANATION15:These statements should be worked from the inside out. Method getX() returns the x-coordinate of the object's current location. By adding 1, you move the location one pixel to the right. Method getY() returns the y-coordinate of the object's current location. With the (x, y) locations computed, calling the setLocation() method will move an Actor one pixel to the right.",
            "",
            ":CAT4:AN ACTOR'S\nTURN",
            "",
            ":QUEST16:100:It's the sum total of the degrees in a circle.",
            ":ANSWER16:T:360",
            ":ANSWER16:F:180",
            ":ANSWER16:F:2\u00B7\u03C0\u00B7r",
            ":ANSWER16:F:\u03C0\u00B7r\u00B2",
            ":ANSWERORDER16:randomized",
            ":EXPLANATION16:There are 360 degrees in a circle.",
            "",
            ":QUEST17:200:For an Actor, zero degrees is in this direction of the compass.",
            ":ANSWER17:F:to the north",
            ":ANSWER17:T:to the east",
            ":ANSWER17:F:to the south",
            ":ANSWER17:F:to the west",
            "#:ANSWERORDER17:randomized",
            ":EXPLANATION17:Zero degrees is to the east and the angle of the circle increases clockwise.",
            "",
            ":QUEST18:300:To find the current orientation (or heading) of an actor, use this method of the Actor class.",
            ":ANSWER18:T:getRotation()",
            ":ANSWER18:F:getOrientation()",
            ":ANSWER18:F:getHeading()",
            ":ANSWER18:F:getDirection()",
            ":ANSWERORDER18:randomized",
            ":EXPLANATION18:The getRotation() method of the Actor class returns the current rotation of the object. Rotation is a degree value in the range of (0..359). Zero degrees is to the east and the angle increases clockwise.",
            "",
            ":QUEST19:400:To turn an actor facing straight up (or north), use this command.",
            ":ANSWER19:T:setRotation(270)",
            ":ANSWER19:F:setRotation(0)",
            ":ANSWER19:F:setRotation(\"north\")",
            ":ANSWER19:F:setRotation(\"up\")",
            ":ANSWERORDER19:randomized",
            ":EXPLANATION19:Zero degrees is to the east and the angle of the circle increases clockwise. Straight up, or north, is at 270 degrees. Use the setRotation() method to set the orientation (or heading) of an Actor.",
            "",
            ":QUEST20:500:To turn an actor 10 degress clockwise from their current heading, use this command.",
            ":ANSWER20:T:turn(10)",
            ":ANSWER20:F:turn(-10)",
            ":ANSWER20:F:setRotation(+10)",
            ":ANSWER20:F:setRotation(-10)",
            ":ANSWERORDER20:randomized",
            ":EXPLANATION20:Zero degrees is to the east and the angle of the circle increases clockwise. Straight up, or north, is at 270 degrees. To turn clockwise use a positive number.",
            "",
            ":CAT5:AT RANDOM",
            "",
            ":QUEST21:100:It is a numerical sequence where the next number cannot be predicted.",
            ":ANSWER21:T:a random number",
            ":ANSWER21:F:a sequential number",
            ":ANSWER21:F:an ordered number",
            ":ANSWER21:F:a psudeo number",
            ":ANSWERORDER21:randomized",
            ":EXPLANATION21:Random numbers are a series of numbers that lack any pattern and thus appear random. Most times, a random number generator will produce psuedorandom sequences, where numbers appear to be random but are not. Psuedorandom numbers are often sufficient for computer programs, like video games, that need random numbers.",
            "",
            ":QUEST22:200:This method of solving problems with a random number generator is named after the casino city of Monaco.",
            ":ANSWER22:T:Monte Carlo",
            ":ANSWER22:F:Las Vegas",
            ":ANSWER22:F:Macau",
            ":ANSWER22:F:Venise",
            ":ANSWERORDER22:randomized",
            ":EXPLANATION22:Monte Carlo is a city widely known for its casino. Monte Carlo methods rely on repeated computation of random or pseudorandom numbers.",
            "",
            ":QUEST23:300:This expression will return a random number between 0 and 10, including the numbers 0 and 10.",
            ":ANSWER23:F:Greenfoot.getRandomNumber(9)",
            ":ANSWER23:F:Greenfoot.getRandomNumber(10)",
            ":ANSWER23:T:Greenfoot.getRandomNumber(11)",
            ":ANSWER23:F:Greenfoot.getRandomNumber(\"10\")",
            "#:ANSWERORDER23:randomized",
            ":EXPLANATION23:The Greenfoot method getRandomNumber() returns a random number between 0 (inclusive) and an upper limit (exclusive). Since the upper limit is excluded you must add one to the parameter to include the upper limit.",
            "",
            ":QUEST24:400:This expression will produce a random number between -45 and +45.",
            ":ANSWER24:T:Greenfoot.getRandomNumber(91) - 45",
            ":ANSWER24:F:Greenfoot.getRandomNumber(45, -45)",
            ":ANSWER24:F:Greenfoot.getRandomNumber(-90) + 45",
            ":ANSWER24:F:Greenfoot.getRandomNumber(-45, 45)",
            ":ANSWERORDER24:randomized",
            ":EXPLANATION24:The Greenfoot method getRandomNumber() returns a random number between 0 (inclusive) and an upper limit (exclusive). Thus the method Greenfoot.getRandomNumber(91) returns a random number between 0 and 90. By subtracting 45, the number shifts to between -45 and +45.",
            "",
            ":QUEST25:500:Use this test condition in an if-statement to randomly decide whether to turn 10% of the time.",
            ":ANSWER25:T:Greenfoot.getRandomNumber(100) < 10",
            ":ANSWER25:F:Greenfoot.getRandomNumber(10) < 100",
            ":ANSWER25:F:turn(Greenfoot.getRandomNumber(-90))",
            ":ANSWER25:F:turn(\"random\") * 10%",
            ":ANSWERORDER25:randomized",
            ":EXPLANATION25:The expression: Greenfoot.getRandomNumber(100) returns a random number between 0 and 99. By testing if the number is < 10, there is a 10% chance of turning when using code like:\n\nif (Greenfoot.getRandomNumber(100) < 10) {\n    // turn statement...\n}",
            "",
            ":CAT6:RELATIONAL\nOPERATORS",
            "",
            ":QUEST26:100:This test condition says that: x is positive.",
            ":ANSWER26:T:x > 0",
            ":ANSWER26:F:0 > x",
            ":ANSWER26:F:x < 0",
            ":ANSWER26:F:x >= 0",
            ":ANSWERORDER26:randomized",
            ":EXPLANATION26:A positive number is a number greater than zero. The relational operator > means greater than. So the expression (x > 0) means x is positive.",
            "",
            ":QUEST27:200:This test condition says: x is negative.",
            ":ANSWER27:T:x < 0",
            ":ANSWER27:F:x > 0",
            ":ANSWER27:F:0 > x",
            ":ANSWER27:F:x >= 0",
            ":ANSWERORDER27:randomized",
            ":EXPLANATION27:A negative number is a number less than zero. The relational operator < means: less than. So the expression (x < 0) means: x is negative.",
            "",
            ":QUEST28:300:This test condition says that x is zero.",
            ":ANSWER28:T:x == 0",
            ":ANSWER28:F:x = 0",
            ":ANSWER28:F:0 = x",
            ":ANSWER28:F:x is 0",
            ":ANSWERORDER28:randomized",
            ":EXPLANATION28:The equality operator is \"==\" (two equal signs). So the expression (x == 0) means: x is zero.",
            "",
            ":QUEST29:400:This test condition says that x is not equal to y.",
            ":ANSWER29:T:x != y",
            ":ANSWER29:F:x <> y",
            ":ANSWER29:F:x =! y",
            ":ANSWER29:F:x \u2260 y",
            ":ANSWERORDER29:randomized",
            ":EXPLANATION29:The algebra symbol \u2260 is not easy to make on a standard keyboard. Thus two symbols are used for inequality: !=. Code the symbols in the order people normally say them.",
            "",
            ":QUEST30:500:This test condition says that x is greater than y + 1.",
            ":ANSWER30:T:x > y + 1",
            ":ANSWER30:F:x + y = 1",
            ":ANSWER30:F:x < y + 1",
            ":ANSWER30:F:x + 1 > y",
            ":ANSWERORDER30:randomized",
            ":EXPLANATION30:Each operand (side of the operator) can be an arithmetic expression. The arithmetic is preformed before the comparison is made.",
            "",
            ""
        };
    public static final String[] BASICS2 = {
            "# Double Round",
            "# Category format = :CATX:Category name, where X is the catgory number.",
            "# Question format = :QUESTX:$:Question test, where X is the question number",
            "#     and $ is the value displayed for the question.",
            "# Questions are linked to categories in groups of 5. For example, questions 1",
            "#     to 5 are in category 1, questions 6 to 10 in category 2, and so on.",
            "# Answer format = :ANSWERX:T/F:Answer text, where X is the question number and",
            "#     T/F is either T (for true) or F (for false). Answers are optional.",
            "# Answer order format = :ANSWERORDER1:randomized to shuffle the answers. Skip",
            "#     this statement if you do not wnat to randomize answers.",
            "# Explanation format = :EXPLANATIONX:Explanation text, where X is the question",
            "#     number. Note that you can force new lines using \n.",
            "",
            ":CAT1:CLASSY\nCONSTRUCTS",
            "",
            ":QUEST1:200:This is the primary purpose of a constructor.",
            ":ANSWER1:T:initialize the variables of a new object",
            ":ANSWER1:F:assign default values to local variables",
            ":ANSWER1:F:define the blueprint for a class",
            ":ANSWER1:F:change the World",
            ":ANSWERORDER1:randomized",
            ":EXPLANATION1:The primary purpose of a constructor is to initialize the variables (fields) of a new object. A constructor is the first thing called when a new object is created.",
            "",
            ":QUEST2:400:How a constructor signature differs from a method signature.",
            ":ANSWER2:T:has no return type",
            ":ANSWER2:F:has no name",
            ":ANSWER2:F:does not use the keyword \"public\"",
            ":ANSWER2:F:has no parameters",
            ":ANSWERORDER2:randomized",
            ":EXPLANATION2:Constructors do not have return types because they cannot return a value.",
            "",
            ":QUEST3:600:This is the name of all constructors.",
            ":ANSWER3:T:the same as the class name",
            ":ANSWER3:F:the keyword \"constructor\"",
            ":ANSWER3:F:the keyword \"construct\"",
            ":ANSWER3:F:the same as method names",
            ":ANSWERORDER3:randomized",
            ":EXPLANATION3:The constructor name is always the same as the class name.",
            "",
            ":QUEST4:800:This keyword is part of the command that calls a constructor.",
            ":ANSWER4:T:new",
            ":ANSWER4:F:construct",
            ":ANSWER4:F:create",
            ":ANSWER4:F:call",
            ":ANSWERORDER4:randomized",
            ":EXPLANATION4:Here is an example of calling a constructor of a class named Bug:\n\n    Bug bug = new Bug();\n\nAs you can see, the \"new\" keyword is part of the command.",
            "",
            ":QUEST5:1000:This is the keyword used when calling a superclass constructor from a subclass constructor.",
            ":ANSWER5:T:super",
            ":ANSWER5:F:this",
            ":ANSWER5:F:construct",
            ":ANSWER5:F:call",
            ":ANSWERORDER5:randomized",
            ":EXPLANATION5:We saw an example of calling the superclass constructor in the example from CrabWorld:\n\nsuper(560, 560, 1);",
            "",
            ":CAT2:NOTES TO\nPEOPLE",
            "",
            ":QUEST6:200:The file that tells a reader all that he or she needs to know to use your program.",
            ":ANSWER6:T:a README.TXT file",
            ":ANSWER6:F:a NOTE.TXT file",
            ":ANSWER6:F:a READ.THIS file",
            ":ANSWER6:F:an INSTRUCTIONS.TXT file",
            ":ANSWERORDER6:randomized",
            ":EXPLANATION6:The README.TXT file is important because it tells the reader, who does not know anything about your project, all that he or she needs to know to use your program.",
            "",
            ":QUEST7:400:This is what you write when you want to leave a note in your source code for a programmer to read.",
            ":ANSWER7:T:a comment",
            ":ANSWER7:F:a variable",
            ":ANSWER7:F:a method",
            ":ANSWER7:F:a sentence",
            ":ANSWERORDER7:randomized",
            ":EXPLANATION7:Computers ignore comments. We write comments to explain our code to programmers, the usual people who read source code.",
            "",
            ":QUEST8:600:The documentation you write when you code a new method.",
            ":ANSWER8:T:a method comment block",
            ":ANSWER8:F:a METHOD.TXT file",
            ":ANSWER8:F:a file comment block",
            ":ANSWER8:F:a note block",
            ":ANSWERORDER8:randomized",
            ":EXPLANATION8:Every method should have a comment block that explains the purpose of the method and how to use it.",
            "",
            ":QUEST9:800:When your method has a parameter, use this tag in the comment block.",
            ":ANSWER9:T:@param",
            ":ANSWER9:F:@parameter",
            ":ANSWER9:F:@arg",
            ":ANSWER9:F:@note",
            ":ANSWERORDER9:randomized",
            ":EXPLANATION9:Use the @param tag to indicate a parameter description. Use a separate @param tag for every parameter.",
            "",
            ":QUEST10:1000:When your method returns a value, use this tag in the comment block.",
            ":ANSWER10:T:@return",
            ":ANSWER10:F:@ret",
            ":ANSWER10:F:@returnValue",
            ":ANSWER10:F:@value",
            ":ANSWERORDER10:randomized",
            ":EXPLANATION10:Use the @return tag to describe the value returned from a method.",
            "",
            ":CAT3:INHERITANCE",
            "",
            ":QUEST11:200:A class is called this when it inherits from another class.",
            ":ANSWER11:T:a subclass",
            ":ANSWER11:F:a superclass",
            ":ANSWER11:F:a generalized class",
            ":ANSWER11:F:a daughter class",
            ":ANSWERORDER11:randomized",
            ":EXPLANATION11:A subclass inherits instance variables and methods from its superclass.",
            "",
            ":QUEST12:400:A class is called this when other classes are derived from it.",
            ":ANSWER12:T:a superclass",
            ":ANSWER12:F:a subclass",
            ":ANSWER12:F:a friend class",
            ":ANSWER12:F:a mother class",
            ":ANSWERORDER12:randomized",
            ":EXPLANATION12:A superclass is a class from which other classes are derived. The superclass mechanism allows for code reusability by encapsulating common features into a superclass. Subclasses can then implement specialized behavior by defining new variables or methods.",
            "",
            ":QUEST13:600:A subclass inherits this many public methods from its superclass.",
            ":ANSWER13:T:all of them",
            ":ANSWER13:F:some of them",
            ":ANSWER13:F:one of them",
            ":ANSWER13:F:none of them",
            ":ANSWERORDER13:randomized",
            ":EXPLANATION13:A subclass inherits all the public methods of its superclass.",
            "",
            ":QUEST14:800:In the class signature of a subclass, the keyword that preceeds the superclass name is this word.",
            ":ANSWER14:T:extends",
            ":ANSWER14:F:super",
            ":ANSWER14:F:this",
            ":ANSWER14:F:inherits",
            ":ANSWERORDER14:randomized",
            ":EXPLANATION14:The keyword \"extends\" identifies the superclass. For example:\n\n    public class Bug extends Actor\n\nAs you can see, the keyword \"extends\" precedes the name of the superclass, \"Actor\".",
            "",
            ":QUEST15:1000:If a superclass is named Dog, a subclass might be called this.",
            ":ANSWER15:T:Fido, or some other name for a dog",
            ":ANSWER15:F:Cow, or some other name for an animal",
            ":ANSWER15:F:Lupus, or some other species name",
            ":ANSWER15:F:Love, or some other emotion name",
            ":ANSWERORDER15:randomized",
            ":EXPLANATION15:Inheritance is an \"is-a\" relationship. Fido \"is a\" dog but a cow is not a dog. Similarly, a species name is not a dog nor is the name of an emotion.",
            "",
            ":CAT4:CONTROL\nFLOW",
            "",
            ":QUEST16:200:The default behavior of program code is to execute in this order.",
            ":ANSWER16:T:sequentially",
            ":ANSWER16:F:randomly",
            ":ANSWER16:F:topologically",
            ":ANSWER16:F:inadvertently",
            ":ANSWERORDER16:randomized",
            ":EXPLANATION16:Program code executes in sequential order (one statement after another) unless the order is changed with a control-flow statement or a method call.",
            "",
            ":QUEST17:400:To conditionally execute statements, use a statement with this Java keyword.",
            ":ANSWER17:T:if",
            ":ANSWER17:F:test",
            ":ANSWER17:F:condition",
            ":ANSWER17:F:exec",
            ":ANSWERORDER17:randomized",
            ":EXPLANATION17:To conditionally execute code, use an if-statement.",
            "",
            ":QUEST18:600:The value of message after the following code executes is this.\\n\\nint temp = 100;\\nString message = \"None of these\";\\nif (temp > 80) message = \"This porridge is too hot.\";\\nif (temp < 80) message = \"This porridge is too cold.\";\\nif (temp == 80) message = \"This porridge is just right.\";",
            ":ANSWER18:T:This porridge is too hot.",
            ":ANSWER18:F:This porridge is too cold.",
            ":ANSWER18:F:This porridge is just right.",
            ":ANSWER18:F:None of these",
            ":ANSWERORDER18:randomized",
            ":EXPLANATION18:Since temp = 100, the first test condition (temp > 80) is true and message = \"This porridge is too hot.\" None of the other test conditions are true and in the end \"message\" contains, \"This porridge is too hot.\"",
            "",
            ":QUEST19:800:The value of \"x\" after the following code executes is this.\\n\\nint x = 5;\\nif (x > 3) {\\n    x = x - 2;\\n} else {\\n    x = x + 2;\\n}",
            ":ANSWER19:F:1",
            ":ANSWER19:T:3",
            ":ANSWER19:F:5",
            ":ANSWER19:F:7",
            "#:ANSWERORDER19:randomized",
            ":EXPLANATION19:Since x = 5 at the start, the code in the if-clause executes but not the code in the else clause. Thus, 2 is subtracted from x and by the end of the code the value of x is 3.",
            "",
            ":QUEST20:1000:If the current image set is image1, the image set after after the following code runs is this.\\n\\nif (getImage() == image1) {\\n    setImage(image2);\\n} else {\\n    setImage(image1);",
            ":ANSWER20:T:image2",
            ":ANSWER20:F:image1",
            ":ANSWER20:F:both image1 and image2",
            ":ANSWER20:F:neither image1 nor image2",
            ":ANSWERORDER20:randomized",
            ":EXPLANATION20:The code alternates between the two images. Since the code starts by displaying images1, it finishes by displaying image2.",
            "",
            ":CAT5:METHODS",
            "",
            ":QUEST21:200:The first line of a method is called this.",
            ":ANSWER21:T:the signature",
            ":ANSWER21:F:the body",
            ":ANSWER21:F:the block",
            ":ANSWER21:F:the first name",
            ":ANSWERORDER21:randomized",
            ":EXPLANATION21:The first line of a method is known as its signature.",
            "",
            ":QUEST22:400:The lines of code between the curly braces of a method are called this.",
            ":ANSWER22:T:the body",
            ":ANSWER22:F:the signature",
            ":ANSWER22:F:the block",
            ":ANSWER22:F:the brace-code",
            ":ANSWERORDER22:randomized",
            ":EXPLANATION22:The lines of code between the curly braces of a method are called the body.",
            "",
            ":QUEST23:600:A valid call for a method named, \"lookForFlower\", is this.",
            ":ANSWER23:T:lookForFlower();",
            ":ANSWER23:F:void lookForFlower();",
            ":ANSWER23:F:lookForFlower(void);",
            ":ANSWER23:F:public void lookForFlower();",
            ":ANSWERORDER23:randomized",
            ":EXPLANATION23:Method calls do NOT include keywords like \"public\" or \"void\".",
            "",
            ":QUEST24:800:The number of parameters in the following method signature is this.\\n\\n    public void myMethod(int a, String b)",
            ":ANSWER24:F:0",
            ":ANSWER24:F:1",
            ":ANSWER24:T:2",
            ":ANSWER24:F:3",
            "#:ANSWERORDER24:randomized",
            ":EXPLANATION24:For the method signature:\\n\\n    public void myMethod(int a, String b)\\n\\nThere are two parameters in the parenthesis separated by a comma.",
            "",
            ":QUEST25:1000:The value returned by calling the following method is this.\\n\\npublic int mySecretNumber() {\\n    int x = 1;\\n    return x + 2;\\n}",
            ":ANSWER25:F:0",
            ":ANSWER25:F:1",
            ":ANSWER25:F:2",
            ":ANSWER25:T:3",
            "#:ANSWERORDER25:randomized",
            ":EXPLANATION25:In the method:\\n\\npublic int mySecretNumber() {\\n    int x = 1;\\n    return x + 2;\\n}\\nvariable x starts with a value of 1 and has 2 added in the next statement. Since 1 + 2 is 3, the value 3 is returned.",
            "",
            ":CAT6:OBJECT\nORIENTED",
            "",
            ":QUEST26:200:The variables and methods of a program are coded in this construct.",
            ":ANSWER26:T:a class",
            ":ANSWER26:F:an object",
            ":ANSWER26:F:an instance",
            ":ANSWER26:F:a comment",
            ":ANSWERORDER26:randomized",
            ":EXPLANATION26:The variables and methods of a program are coded in a class.",
            "",
            ":QUEST27:400:This special value means, \"no object\".",
            ":ANSWER27:T:null",
            ":ANSWER27:F:none",
            ":ANSWER27:F:empty",
            ":ANSWER27:F:void",
            ":ANSWERORDER27:randomized",
            ":EXPLANATION27:The keyword \"null\" means \"no object\".",
            "",
            ":QUEST28:600:For a class named Foo, a valid expression for creating a new object is this.",
            ":ANSWER28:T:new Foo()",
            ":ANSWER28:F:Foo()",
            ":ANSWER28:F:Foo new()",
            ":ANSWER28:F:new Foo",
            ":ANSWERORDER28:randomized",
            ":EXPLANATION28:The correct syntax is: new Foo()",
            "",
            ":QUEST29:800:The class name from which you construct ants and other insect objects is also a euphemism for a programming error.",
            ":ANSWER29:T:a Bug",
            ":ANSWER29:F:a Spider",
            ":ANSWER29:F:a Pest",
            ":ANSWER29:F:an Error",
            ":ANSWERORDER29:randomized",
            ":EXPLANATION29:Software errors are know euphemistically as \"bugs\".",
            "",
            ":QUEST30:1000:The name of the class that contains this code.\\n\\nprivate Clock clock;\\nprivate Alarm alarm;\\npublic AlarmClock(Date time) {/* statements here */}",
            ":ANSWER30:T:AlarmClock",
            ":ANSWER30:F:Alarm",
            ":ANSWER30:F:Clock",
            ":ANSWER30:F:Cannot determine class name from information given",
            ":ANSWERORDER30:randomized",
            ":EXPLANATION30:Notice the code:\\n\\n    public AlarmClock(Date time) {/* statements here */}\\n\\nYou can tell this is a constructor because it has no return type. The name of a constructor is always the same as the name of the class.",
            "",
            "# Final round",
            "",
            ":CAT7:TRICKY QUESTIONS",
            "",
            ":QUEST31:100:This is what happens when working with the code:\\n\\n  String new = \"text\";",
            ":ANSWER31:T:not compile",
            ":ANSWER31:F:assign the string to a variable named new",
            ":ANSWER31:F:issue a warning but still compile",
            ":ANSWER31:F:assign \"text\", with the quote marks, to variable new",
            ":ANSWERORDER31:randomized",
            ":EXPLANATION31:This is a classic trick question - \"new\" is a reserved word in Java (used to construct objects). Thus \"new\" cannot be used for a variable name. Other reserved words that cannot be used as a variable name include: class, if, and public.",
            "",
        };
    public static final String[] L33T = {
            "# Single Round",
            "# Category format = :CATX:Category name, where X is the catgory number.",
            "# Question format = :QUESTX:$:Question test, where X is the question number",
            "#     and $ is the value displayed for the question.",
            "# Questions are linked to categories in groups of 5. For example, questions 1",
            "#     to 5 are in category 1, questions 6 to 10 in category 2, and so on.",
            "# Answer format = :ANSWERX:T/F:Answer text, where X is the question number and",
            "#     T/F is either T (for true) or F (for false). Answers are optional.",
            "# Answer order format = :ANSWERORDER1:randomized to shuffle the answers. Skip",
            "#     this statement if you do not wnat to randomize answers.",
            "# Explanation format = :EXPLANATIONX:Explanation text, where X is the question",
            "#     number. Note that you can force new lines using \\\\n.",
            "",
            ":CAT1:TRUE OR\nFALSE",
            "",
            ":QUEST1:100:The boolean data type is named in honor of this man.",
            ":ANSWER1:T:George Boole",
            ":ANSWER1:F:George Boolean",
            ":ANSWER1:F:Ian Boolean",
            ":ANSWER1:F:Boole Ean",
            ":ANSWERORDER1:randomized",
            ":EXPLANATION1:George Boole's work on symbolic logic was applied to electromechanical and electronic circuits in the nineteenth and twentieth centuries.",
            "",
            ":QUEST2:200:In the Java Programming language, this variable type only has a value of either true or false.",
            ":ANSWER2:T:boolean",
            ":ANSWER2:F:int",
            ":ANSWER2:F:double",
            ":ANSWER2:F:logical",
            ":ANSWERORDER2:randomized",
            ":EXPLANATION2:The boolean data type has only two possible values: true and false.",
            "",
            ":QUEST3:300:Relational operations always evaluate to this data type.",
            ":ANSWER3:T:boolean",
            ":ANSWER3:F:int",
            ":ANSWER3:F:double",
            ":ANSWER3:F:logical",
            ":ANSWERORDER3:randomized",
            ":EXPLANATION3:The boolean data type has only two possible values: true and false.",
            "",
            ":QUEST4:400:A boolean variable can always substitute for a this part of a loop statement.",
            ":ANSWER4:T:test condition",
            ":ANSWER4:F:initialization",
            ":ANSWER4:F:update",
            ":ANSWER4:F:body",
            ":ANSWERORDER4:randomized",
            ":EXPLANATION4:A test condition must always evaluates to true or false, and thus a boolean data type can provide the needed value.",
            "",
            ":QUEST5:500:The following test condition, the following can be simplfied to this statement:\\nboosterOn == true",
            ":ANSWER5:T:boosterOn",
            ":ANSWER5:F:boosterOn == false",
            ":ANSWER5:F:boosterOn!",
            ":ANSWER5:F:!boosterOn",
            ":ANSWERORDER5:randomized",
            ":EXPLANATION5:A test condition must always evaluates to true or false, and thus a boolean data type can provide the needed value.",
            "",
            ":CAT2:LOGICAL\nOPERATORS",
            "",
            ":QUEST6:100:The symbols &&, || and ! are examples of this.",
            ":ANSWER6:T:Logical operators",
            ":ANSWER6:F:Relational operators",
            ":ANSWER6:F:Equality operators",
            ":ANSWER6:F:Test conditions",
            ":ANSWERORDER6:randomized",
            ":EXPLANATION6:The symbols &&, || and ! are examples of logical operators.",
            "",
            ":QUEST7:200:These are the two possible outcomes of any logical operation.",
            ":ANSWER7:T:true or false",
            ":ANSWER7:F:1 or 2",
            ":ANSWER7:F:yes or no",
            ":ANSWER7:F:up or down",
            ":ANSWERORDER7:randomized",
            ":EXPLANATION7:All logical operations evalaute to true or false.",
            "",
            ":QUEST8:300:This value is the result of evaluating the following expression: (!true)",
            ":ANSWER8:T:false",
            ":ANSWER8:F:true",
            ":ANSWER8:F:-true",
            ":ANSWER8:F:undefined",
            ":ANSWERORDER8:randomized",
            ":EXPLANATION8:The not symbol \"!\" reverses a boolean value.",
            "",
            ":QUEST9:400:Of these logical operations, this one produces the largest result.",
            ":ANSWER9:T:||",
            ":ANSWER9:F:&&",
            ":ANSWER9:F:!",
            ":ANSWER9:F:^",
            ":ANSWERORDER9:randomized",
            ":EXPLANATION9:If you restate true as 1 and false as 0, you see that an OR operation is the maximum of the operands.",
            "",
            ":QUEST10:500:This value is the result of evaluating the following expression.: (x < 8 || x > 6)",
            ":ANSWER10:T:true",
            ":ANSWER10:F:false",
            ":ANSWER10:F:it depends on x",
            ":ANSWER10:F:7",
            ":ANSWERORDER10:randomized",
            ":EXPLANATION10:The value of x is always either greater than 6 or less than 8.",
            "",
            ":CAT3:CONSTANTS",
            "",
            ":QUEST11:100:The keyword Java uses to make a variable constant is this.",
            ":ANSWER11:T:final",
            ":ANSWER11:F:const",
            ":ANSWER11:F:constant",
            ":ANSWER11:F:define",
            ":ANSWERORDER11:randomized",
            ":EXPLANATION11:The keyword Java uses to make a variable constant is \"final\".",
            "",
            ":QUEST12:200:This is the Java coding style to show variables are constant.",
            ":ANSWER12:T:all uppercase",
            ":ANSWER12:F:captialized",
            ":ANSWER12:F:all lowercase",
            ":ANSWER12:F:inverted case",
            ":ANSWERORDER12:randomized",
            ":EXPLANATION12:The Java coding style to show variables are constant is all uppercase with underbar separators.",
            "",
            ":QUEST13:300:This is the keyword used with constants so only one copy is stored in memory.",
            ":ANSWER13:T:static",
            ":ANSWER13:F:public",
            ":ANSWER13:F:final",
            ":ANSWER13:F:int",
            ":ANSWERORDER13:randomized",
            ":EXPLANATION13:The keyword \"static\" is used with constants so only one copy is stored in memory.",
            "",
            ":QUEST14:400:Making it easy to change the value of numbers used repeatedly in a program is a reason for using this.",
            ":ANSWER14:T:A constant",
            ":ANSWER14:F:A variable",
            ":ANSWER14:F:A literal",
            ":ANSWER14:F:A comment",
            ":ANSWERORDER14:randomized",
            ":EXPLANATION14:Using a constant makes it easy to change the value of literal numbers used repeatedly in a program",
            "",
            ":QUEST15:500:This is the keyword that could be added to constants for member variables but not for local variables.",
            ":ANSWER15:T:public",
            ":ANSWER15:F:extends",
            ":ANSWER15:F:member",
            ":ANSWER15:F:inline",
            ":ANSWERORDER15:randomized",
            ":EXPLANATION15:Adding public (or private) to constants is a good programming practice that affects their accessibility.",
            "",
            ":CAT4:LOOPS",
            "",
            ":QUEST16:100:The while and for are two types of this statement.",
            ":ANSWER16:T:repetition",
            ":ANSWER16:F:conditional",
            ":ANSWER16:F:logical",
            ":ANSWER16:F:optional",
            ":ANSWERORDER16:randomized",
            ":EXPLANATION16:The while and for are repetition statements, also known as loops.",
            "",
            ":QUEST17:200:An integer variable that controls the number of times a loop executes is known by this name.",
            ":ANSWER17:T:counter",
            ":ANSWER17:F:controller",
            ":ANSWER17:F:for",
            ":ANSWER17:F:do",
            ":ANSWERORDER17:randomized",
            ":EXPLANATION17:Counting loops make use of a counter variable to control the number of repetitions.",
            "",
            ":QUEST18:300:The three parts of a for-statement include these.",
            ":ANSWER18:T:initialization, test condition, update",
            ":ANSWER18:F:signature, test condition, update",
            ":ANSWER18:F:initialization, repetition, update",
            ":ANSWER18:F:initialization, test condition, header",
            ":ANSWERORDER18:randomized",
            ":EXPLANATION18:The three parts of a for-statement include initialization, test condition and update.",
            "",
            ":QUEST19:400:When a loop test condition is always true, the loop is known as this type.",
            ":ANSWER19:T:infinite",
            ":ANSWER19:F:indefinite",
            ":ANSWER19:F:counter",
            ":ANSWER19:F:incremental",
            ":ANSWERORDER19:randomized",
            ":EXPLANATION19:The test condition of an infinite loop always evaluates to true.",
            "",
            ":QUEST20:500:The enhanced for loop is often called this.",
            ":ANSWER20:T:for-each loop",
            ":ANSWER20:F:for-ever loop",
            ":ANSWER20:F:enduring loop",
            ":ANSWER20:F:indefinite loop",
            ":ANSWERORDER20:randomized",
            ":EXPLANATION20:The enhanced for loop is often called the \"for-each\" loop because other programming languages use the word \"foreach\" instead of \"for\".",
            "",
            ":CAT5:COLORS",
            "#These are the primary colors for most computer displays.",
            "",
            ":QUEST21:100:The color red is coded as this in Java.",
            ":ANSWER21:T:Color color = new Color(255, 0, 0);",
            ":ANSWER21:F:Color color = new Color(0, 255, 0);",
            ":ANSWER21:F:Color color = new Color(0, 0, 255);",
            ":ANSWER21:F:Color color = new Color(255, 255, 255);",
            ":ANSWERORDER21:randomized",
            ":EXPLANATION21:The color red is coded as:\\n\\nColor color = new Color(255, 0, 0);",
            "",
            ":QUEST22:200:The color green is coded as this in Java.",
            ":ANSWER22:F:Color color = new Color(255, 0, 0);",
            ":ANSWER22:T:Color color = new Color(0, 255, 0);",
            ":ANSWER22:F:Color color = new Color(0, 0, 255);",
            ":ANSWER22:F:Color color = new Color(255, 255, 255);",
            ":ANSWERORDER22:randomized",
            ":EXPLANATION22:The color green is coded as:\\n\\nColor color = new Color(0, 255, 0);",
            "",
            ":QUEST23:300:The color blue is coded as this in Java.",
            ":ANSWER23:F:Color color = new Color(255, 0, 0);",
            ":ANSWER23:F:Color color = new Color(0, 255, 0);",
            ":ANSWER23:T:Color color = new Color(0, 0, 255);",
            ":ANSWER23:F:Color color = new Color(255, 255, 255);",
            ":ANSWERORDER23:randomized",
            ":EXPLANATION23:The color green is coded as:\\n\\nColor color = new Color(0, 0, 255);",
            "",
            ":QUEST24:400:The color white is coded as this in Java.",
            ":ANSWER24:F:Color color = new Color(255, 0, 0);",
            ":ANSWER24:F:Color color = new Color(0, 255, 0);",
            ":ANSWER24:F:Color color = new Color(0, 0, 255);",
            ":ANSWER24:T:Color color = new Color(255, 255, 255);",
            ":ANSWERORDER24:randomized",
            ":EXPLANATION24:The color white is coded as:\\n\\nColor color = new Color(255, 255, 255);",
            "",
            ":QUEST25:500:The integer values of red, green and blue fall in this range.",
            ":ANSWER25:T:0 to 255",
            ":ANSWER25:F:0 to 1",
            ":ANSWER25:F:-1 to +1",
            ":ANSWER25:F:0.0 to 255.99",
            ":ANSWERORDER25:randomized",
            ":EXPLANATION25:The integer values of red, green and blue fall in the range of 0 to 255.",
            "",
            ":CAT6:THIS AND\nTHIS()",
            "",
            ":QUEST26:100:This is a keyword to use when an object refers to itself.",
            ":ANSWER26:T:this",
            ":ANSWER26:F:self",
            ":ANSWER26:F:that",
            ":ANSWER26:F:super",
            ":ANSWERORDER26:randomized",
            ":EXPLANATION26:This keyword \"this\" is used when an object refers to itself, as in \"this current object\".",
            "",
            ":QUEST27:200:A logical error where a parameter and member variable have the same name is known as this.",
            ":ANSWER27:T:shadowing",
            ":ANSWER27:F:matching",
            ":ANSWER27:F:confusing",
            ":ANSWER27:F:indeterminate",
            ":ANSWERORDER27:randomized",
            ":EXPLANATION27:A logical error where a parameter and member variable have the same name is known as \"shadowing\".",
            "",
            ":QUEST28:300:Shadowing problems can be corrected using this keyword.",
            ":ANSWER28:T:this",
            ":ANSWER28:F:self",
            ":ANSWER28:F:super",
            ":ANSWER28:F:that",
            ":ANSWERORDER28:randomized",
            ":EXPLANATION28:Shadowing problems can be corrected using the keyword \"this\".",
            "",
            ":QUEST29:400:A call made to chain two constructors together, often preventing repeated initialization code.",
            ":ANSWER29:T:this()",
            ":ANSWER29:F:this",
            ":ANSWER29:F:chain()",
            ":ANSWER29:F:super",
            ":ANSWERORDER29:randomized",
            ":EXPLANATION29:A call to this() will call another constructor in the same class, often preventing repeated initialization code.",
            "",
            ":QUEST30:500:When used, it must be the first statement in a constructor.",
            ":ANSWER30:T:this()",
            ":ANSWER30:F:this",
            ":ANSWER30:F:init()",
            ":ANSWER30:F:construct()",
            ":ANSWERORDER30:randomized",
            ":EXPLANATION30:If this() is used, it must be the first statement of a constructor.",
            "",
        };

}
