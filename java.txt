# All questions are about Java
# Category format = :CATX:Category name, where X is the catgory number.
# Question format = :QUESTX:$:Question test, where X is the question number
#     and $ is the value displayed for the question.
# Questions are linked to categories in groups of 5. For example, questions 1
#     to 5 are in category 1, questions 6 to 10 in category 2, and so on.
# Answer format = :ANSWERX:T/F:Answer text, where X is the question number and
#     T/F is either T (for true) or F (for false). Answers are optional.
# Answer order format = :ANSWERORDER1:randomized to shuffle the answers. Skip
#     this statement if you do not wnat to randomize answers.
# Explanation format = :EXPLANATIONX:Explanation text, where X is the question
#     number. Note that you can force new lines using \n.

:CAT1:RAW DATA

:QUEST1:100:When you want to store whole numbers in a computer's main memory, use this data type.
:ANSWER1:T:int
:ANSWER1:F:String
:ANSWER1:F:double
:ANSWER1:F:char
:ANSWERORDER1:randomized
:EXPLANATION1:The data type of a variable defines the kind of data to store in a computer's main memory. The "int" data type stores integers, which are numbers without a decimal point.

:QUEST2:200:When you want to store sequences of characters, like "Hello World", use this data type.
:ANSWER2:T:String
:ANSWER2:F:string
:ANSWER2:F:str
:ANSWER2:F:text
:ANSWERORDER2:randomized
:EXPLANATION2:Sequences of characters are known as strings. The string data type in Java is "String".

:QUEST3:300:Of 3, 4 or 5, these are all this data type.
:ANSWER3:T:int
:ANSWER3:F:String
:ANSWER3:F:double
:ANSWER3:F:char
:ANSWERORDER3:randomized
:EXPLANATION3:The numbers 3, 4 and 5 are all integer numbers. An integer is zero or any positive or negative number without a decimal point. The data type for integers is "int".

:QUEST4:400:The literal "9" (with quote marks) is of this data type.
:ANSWER4:T:String
:ANSWER4:F:int
:ANSWER4:F:double
:ANSWER4:F:char
:ANSWERORDER4:randomized
:EXPLANATION4:Sequences of characters inside double quotes are strings. Even though the characters look like numbers the quote marks around the numbers make them a string. Even though the string contains numbers, the double quote marks make this a string. In Java, the data type for a string is "String".

:QUEST5:500:You cannot store the digits of Pi, which is approximately 3.14159, with this numerical data type.
:ANSWER5:T:int
:ANSWER5:F:String
:ANSWER5:F:double
:ANSWER5:F:float
:ANSWERORDER5:randomized
:EXPLANATION5:Pi is approximately 3.14159, which is a number with a decimal point. The "int" data type cannot store numbers with decimal points. Strings can store the digits making up Pi, even though your program cannot perform arithmatic on the number. Both double and float can store Pi as a number though double has more accuracy that float. Thus the best question is, "What is int"?

:CAT2:NOTES TO PEOPLE

:QUEST6:100:The file that tells a reader all that he or she needs to know to use your program.
:ANSWER6:T:a README.TXT file
:ANSWER6:F:a NOTE.TXT file
:ANSWER6:F:a READ.THIS file
:ANSWER6:F:an INSTRUCTIONS.TXT file
:ANSWERORDER6:randomized
:EXPLANATION6:The README.TXT file is important because it tells the reader, who does not know anything about your project, all that he or she needs to know to use your program.

:QUEST7:200:This is what you write when you want to leave a note in your source code for a programmer to read.
:ANSWER7:T:a comment
:ANSWER7:F:a variable
:ANSWER7:F:a method
:ANSWER7:F:a sentence
:ANSWERORDER7:randomized
:EXPLANATION7:Computers ignore comments. We write comments to explain our code to programmers, the usual people who read source code.

:QUEST8:300:The documentation you write when you code a new method.
:ANSWER8:T:a method comment block
:ANSWER8:F:a METHOD.TXT file
:ANSWER8:F:a file comment block
:ANSWER8:F:a note block
:ANSWERORDER8:randomized
:EXPLANATION8:Every method should have a comment block that explains the purpose of the method and how to use it.

:QUEST9:400:When your method has a parameter, use this tag in the comment block.
:ANSWER9:T:@param
:ANSWER9:F:@parameter
:ANSWER9:F:@arg
:ANSWER9:F:@note
:ANSWERORDER9:randomized
:EXPLANATION9:Use the @param tag to indicate a parameter description. Use a separate @param tag for every parameter.

:QUEST10:500:When your method returns a value, use this tag in the comment block.
:ANSWER10:T:@return
:ANSWER10:F:@ret
:ANSWER10:F:@returnValue
:ANSWER10:F:@value
:ANSWERORDER10:randomized
:EXPLANATION10:Use the @return tag to describe the value returned from a method.

:CAT3:RELATIONAL OPERATORS

:QUEST11:100:This test condition says that, "x is positive".
:ANSWER11:T:x > 0
:ANSWER11:F:0 > x
:ANSWER11:F:x < 0
:ANSWER11:F:x >= 0
:ANSWERORDER11:randomized
:EXPLANATION11:A positive number is a number greater than zero. The relational operator > means "greater than". So the expression (x > 0) means, "x is positive".

:QUEST12:200:This test condition says that, "x is negative".
:ANSWER12:T:x < 0
:ANSWER12:F:x > 0
:ANSWER12:F:0 > x
:ANSWER12:F:x >= 0
:ANSWERORDER12:randomized
:EXPLANATION12:A negative number is a number less than zero. The relational operator < means "less than". So the expression (x < 0) means, "x is negative".

:QUEST13:300:This test condition says that, "x is zero".
:ANSWER13:T:x == 0
:ANSWER13:F:x = 0
:ANSWER13:F:0 = x
:ANSWER13:F:x is 0
:ANSWERORDER13:randomized
:EXPLANATION13:The equality operator is "==" (two equal signs). So the expression (x == 0) means, "x is zero".

:QUEST14:400:This test condition says that, "x is not equal to y".
:ANSWER14:T:x != y
:ANSWER14:F:x <> y
:ANSWER14:F:x =! y
:ANSWER14:F:x \u2260 y
:ANSWERORDER14:randomized
:EXPLANATION14:The algebra symbol \u2260 is not easy to make on a standard keyboard. Thus two symbols are used for inequality: "!=". Code the symbols in the order people normally say them.

:QUEST15:500:This test condition says that, "x is greater than y + 1".
:ANSWER15:T:x > y + 1
:ANSWER15:F:x + y = 1
:ANSWER15:F:x < y + 1
:ANSWER15:F:x + 1 > y
:ANSWERORDER15:randomized
:EXPLANATION15:Each operand (side of the operator) can be an arithmetic expression. The arithmetic is preformed before the comparison is made.

:CAT4:CONTROL FLOW

:QUEST16:100:The default behavior of program code is to execute in this order.
:ANSWER16:T:sequentially
:ANSWER16:F:randomly
:ANSWER16:F:topologically
:ANSWER16:F:inadvertently
:ANSWERORDER16:randomized
:EXPLANATION16:Program code executes in sequential order (one statement after another) unless the order is changed with a control-flow statement or a method call.

:QUEST17:200:To conditionally execute statements, use a statement with this Java keyword.
:ANSWER17:T:if
:ANSWER17:F:test
:ANSWER17:F:condition
:ANSWER17:F:exec
:ANSWERORDER17:randomized
:EXPLANATION17:To conditionally execute code, use an if-statement.

:QUEST18:300:The value of "message" after the following code executes is this.\n\nint temp = 100;\nString message = "None of these";\nif (temp > 80) message = "This porridge is too hot.";\nif (temp < 80) message = "This porridge is too cold.";\nif (temp == 80) message = "This porridge is just right.";
:ANSWER18:T:"This porridge is too hot."
:ANSWER18:F:"This porridge is too cold."
:ANSWER18:F:"This porridge is just right."
:ANSWER18:F:"None of these"
:ANSWERORDER18:randomized
:EXPLANATION18:Since temp = 100, the first test condition (temp > 80) is true and message = "This porridge is too hot." None of the other test conditions are true and in the end "message" contains, "This porridge is too hot."

:QUEST19:400:The value of "x" after the following code executes is this.\n\nint x = 5;\nif (x > 3) {\n    x = x - 2;\n} else {\n    x = x + 2;\n}
:ANSWER19:F:1
:ANSWER19:T:3
:ANSWER19:F:5
:ANSWER19:F:7
#:ANSWERORDER19:randomized
:EXPLANATION19:Since x = 5 at the start, the code in the if-clause executes but not the code in the else clause. Thus, 2 is subtracted from x and by the end of the code the value of x is 3.

:QUEST20:500:If the current image set is image1, the image set after after the following code runs is this.\n\nif (getImage() == image1) {\n    setImage(image2);\n} else {\n    setImage(image1);
:ANSWER20:T:image2
:ANSWER20:F:image1
:ANSWER20:F:both image1 and image2
:ANSWER20:F:neither image1 nor image2
:ANSWERORDER20:randomized
:EXPLANATION20:The code alternates between the two images. Since the code starts by displaying images1, it finishes by displaying image2.

:CAT5:METHODS

:QUEST21:100:The first line of a method is called this.
:ANSWER21:T:the signature
:ANSWER21:F:the body
:ANSWER21:F:the block
:ANSWER21:F:the first name
:ANSWERORDER21:randomized
:EXPLANATION21:The first line of a method is known as its signature.

:QUEST22:200:The lines of code between the curly braces of a method are called this.
:ANSWER22:T:the body
:ANSWER22:F:the signature
:ANSWER22:F:the block
:ANSWER22:F:the brace-code
:ANSWERORDER22:randomized
:EXPLANATION22:The lines of code between the curly braces of a method are called the body.

:QUEST23:300:A valid call for a method named, "lookForFlower", is this.
:ANSWER23:T:lookForFlower();
:ANSWER23:F:void lookForFlower();
:ANSWER23:F:lookForFlower(void);
:ANSWER23:F:public void lookForFlower();
:ANSWERORDER23:randomized
:EXPLANATION23:Method calls do NOT include keywords like "public" or "void".

:QUEST24:400:The number of parameters in the following method signature is this.\n\n    public void myMethod(int a, String b)
:ANSWER24:F:0
:ANSWER24:F:1
:ANSWER24:T:2
:ANSWER24:F:3
#:ANSWERORDER24:randomized
:EXPLANATION24:For the method signature:\n\n    public void myMethod(int a, String b)\n\nThere are two parameters in the parenthesis separated by a comma.

:QUEST25:500:The value returned by calling the following method is this.\n\npublic int mySecretNumber() {\n    int x = 1;\n    return x + 2;\n}
:ANSWER25:F:0
:ANSWER25:F:1
:ANSWER25:F:2
:ANSWER25:T:3
#:ANSWERORDER25:randomized
:EXPLANATION25:In the method:\n\npublic int mySecretNumber() {\n    int x = 1;\n    return x + 2;\n}\nvariable x starts with a value of 1 and has 2 added in the next statement. Since 1 + 2 is 3, the value 3 is returned.

:CAT6:OBJECT ORIENTED

:QUEST26:100:The variables and methods of a program are coded in this construct.
:ANSWER26:T:a class
:ANSWER26:F:an object
:ANSWER26:F:an instance
:ANSWER26:F:a comment
:ANSWERORDER26:randomized
:EXPLANATION26:The variables and methods of a program are coded in a class.

:QUEST27:200:This special value means, "no object".
:ANSWER27:T:null
:ANSWER27:F:none
:ANSWER27:F:empty
:ANSWER27:F:void
:ANSWERORDER27:randomized
:EXPLANATION27:The keyword "null" means "no object".

:QUEST28:300:For a class named Foo, a valid expression for creating a new object is this.
:ANSWER28:T:new Foo()
:ANSWER28:F:Foo()
:ANSWER28:F:Foo new()
:ANSWER28:F:new Foo
:ANSWERORDER28:randomized
:EXPLANATION28:The correct syntax is: new Foo()

:QUEST29:400:The class name from which you construct ants and other insect objects is also a euphemism for a programming error.
:ANSWER29:T:a Bug
:ANSWER29:F:a Spider
:ANSWER29:F:a Pest
:ANSWER29:F:an Error
:ANSWERORDER29:randomized
:EXPLANATION29:Software errors are know euphemistically as "bugs".

:QUEST30:500:The name of the class that contains this code.\n\nprivate Clock clock;\nprivate Alarm alarm;\npublic AlarmClock(Date time) {/* statements here */}
:ANSWER30:T:AlarmClock
:ANSWER30:F:Alarm
:ANSWER30:F:Clock
:ANSWER30:F:Cannot determine class name from information given
:ANSWERORDER30:randomized
:EXPLANATION30:Notice the code:\n\n    public AlarmClock(Date time) {/* statements here */}\n\nYou can tell this is a constructor because it has no return type. The name of a constructor is always the same as the name of the class.

# Final round

:CAT7:TRICKY QUESTIONS

:QUEST31:100:This is what happens when working with the code:\n\n  String new = "text";
:ANSWER31:T:not compile
:ANSWER31:F:assign the string to a variable named new
:ANSWER31:F:issue a warning but still compile
:ANSWER31:F:assign "text", with the quote marks, to variable new
:ANSWERORDER31:randomized
:EXPLANATION31:This is a classic trick question - "new" is a reserved word in Java (used to construct objects). Thus "new" cannot be used for a variable name. Other reserved words that cannot be used as a variable name include: class, if, and public.
